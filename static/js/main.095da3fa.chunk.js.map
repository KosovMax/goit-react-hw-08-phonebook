{"version":3,"sources":["routes/index.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","images/avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Loading/Loading.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/phonebook/phonebook-actions.js","components/UserMenu/UserMenu.module.css","redux/phonebook/phonebook-reducer.js"],"names":["home","contacts","register","login","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","console","log","routes","exact","to","className","activeClassName","AuthNav","mapDispatchToProps","onLogout","authOperations","logout","getName","getAuthUserName","styles","flex","src","avatar","Button","variant","onClick","Navbar","expand","bg","Brand","href","Nav","Loader","style","width","height","display","alignItems","justifyContent","marginRight","Spinner","animation","role","PrivateRoute","Component","component","redirectTo","routeProps","render","props","defaultProps","PublicRoute","restricted","HomeView","lazy","ContactsView","RegisterView","LoginView","NotFound","getCurrentUser","useEffect","Container","Row","Col","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfigAuth","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","loading","document","querySelector","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialState","name","email","user","createReducer","authActions","_","payload","token","setError","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","credential","dispatch","a","post","res","data","message","getState","getToken","get","Boolean","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","filter","id"],"mappings":"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","file":"static/js/main.095da3fa.chunk.js","sourcesContent":["export default {\r\n    home:'/',\r\n    contacts:'/contacts',\r\n    register:'/register',\r\n    login:'/login'\r\n}","import { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from './../../routes';\r\nimport {authSelectors} from './../../redux/auth'\r\n\r\nfunction Navigation({isAuthenticated}){\r\n\r\n    console.log(routes);\r\n\r\n    return(\r\n        <>\r\n            <NavLink exact to={routes.home} className=\"NavLink\" activeClassName=\"NavLink--active\">Home</NavLink>\r\n            {isAuthenticated && <NavLink to={routes.contacts} className=\"NavLink\" activeClassName=\"NavLink--active\">Contacts</NavLink>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    isAuthenticated:authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(Navigation)","import { NavLink } from 'react-router-dom';\r\nimport routes from './../../routes';\r\n\r\nexport default function AuthNav(){\r\n\r\n    return(\r\n        <>\r\n        <NavLink exact to={routes.register} className=\"NavLink\" activeClassName=\"NavLink--active\">Register</NavLink>\r\n        <NavLink to={routes.login} className=\"NavLink\" activeClassName=\"NavLink--active\">Login</NavLink>\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.a30d46b7.png\";","import { Button } from \"react-bootstrap\";\r\n\r\nimport styles from './UserMenu.module.css';\r\nimport avatar from './../../images/avatar.png';\r\n\r\nimport {connect} from 'react-redux';\r\nimport { authSelectors, authOperations } from './../../redux/auth';\r\n\r\n\r\nfunction UserMenu({getName, onLogout}){\r\n    return(\r\n        <div className={styles.flex}>\r\n            <img src={avatar} className={styles.avatar}></img>\r\n            <b>Welcome, {getName}</b>\r\n            <Button variant=\"primary\" onClick={onLogout}>Logout</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    getName: authSelectors.getAuthUserName(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout: authOperations.logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import Navigation from './../Navigation';\r\nimport AuthNav from './../AuthNav';\r\nimport UserMenu from './../UserMenu';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {authSelectors} from './../../redux/auth'\r\n\r\n\r\nfunction AppBar({isAuthenticated}){\r\n    return(\r\n        <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\">React 21+22</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                <Navigation />\r\n            </Nav>\r\n            <Nav>\r\n                {isAuthenticated ? <UserMenu/> : <AuthNav/>}\r\n            </Nav>\r\n            \r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar)","import { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function Loader(){\r\n    return(\r\n        <div style={{width:'100%', height:'150px',display:'flex', alignItems:'center', justifyContent:'center'}}>\r\n             \r\n            <h2 style={{marginRight:'15px'}}>Loading</h2>\r\n            <Spinner \r\n                animation=\"border\" \r\n                role=\"status\" \r\n            />\r\n        \r\n        </div>\r\n    )\r\n}","import { connect } from \"react-redux\"\r\nimport { Redirect, Route } from \"react-router-dom\"\r\nimport {authSelectors} from './../redux/auth'\r\n\r\n\r\nconst PrivateRoute = ({component:Component, isAuthenticated, redirectTo, ...routeProps}) =>(\r\n    <Route \r\n        {...routeProps} \r\n        render={props => \r\n            isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n        }\r\n    />\r\n)\r\n\r\nPrivateRoute.defaultProps = {\r\n    redirectTo:'/'\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import { connect } from \"react-redux\"\r\nimport { Redirect, Route } from \"react-router-dom\"\r\nimport {authSelectors} from './../redux/auth'\r\n\r\n\r\nconst PublicRoute = ({component:Component, isAuthenticated, redirectTo, ...routeProps}) =>(\r\n\r\n    <Route \r\n        {...routeProps}\r\n\r\n        render={props => \r\n            isAuthenticated && routeProps.restricted ? <Redirect to={redirectTo} /> : <Component {...props} />\r\n        }\r\n    />\r\n\r\n)\r\n\r\nPublicRoute.defaultProps = {\r\n    redirectTo:'/'\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(PublicRoute)","\n\nimport AppBar from './components/AppBar';\nimport { Route, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport { Suspense, lazy, useEffect } from 'react';\nimport Loading from './components/Loading';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {authOperations} from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\n\nconst HomeView = lazy(() => import('./views/HomeView'))\nconst ContactsView = lazy(() => import('./views/ContactsView'))\nconst RegisterView = lazy(() => import('./views/RegisterView'))\nconst LoginView = lazy(() => import('./views/LoginView'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n\n\nfunction App({getCurrentUser}){\n\n    useEffect(()=>{\n        console.log('update app')\n        getCurrentUser();\n    }, [])\n\n    return (\n\n        <Container>\n            <Row>\n                <Col>\n                    <AppBar/>\n\n                    <section>\n                        <Suspense fallback={<Loading/>}>\n                            <Switch>\n                                <PublicRoute exact path={routes.home} component={HomeView} />\n                                <PrivateRoute \n                                    path={routes.contacts} \n                                    component={ContactsView} \n                                    redirectTo={routes.login}\n                                />\n                                <PublicRoute \n                                    path={routes.register} \n                                    component={RegisterView}\n                                    restricted\n                                    redirectTo={routes.contacts}\n                                />\n                                <PublicRoute \n                                    path={routes.login} \n                                    component={LoginView} \n                                    restricted\n                                    redirectTo={routes.contacts}\n                                />\n                                <PublicRoute component={NotFound} />\n                            </Switch>\n                        </Suspense>\n                    </section>\n                </Col>\n            </Row>\n        </Container>\n\n    );\n}\n\nconst mapDispatchToProps = {\n    getCurrentUser: authOperations.getCurrentUser\n}\n\nexport default connect(null, mapDispatchToProps)(App)\n","\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './../redux/phonebook/phonebook-reducer'\r\nimport { authReducer } from './../redux/auth';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n  } from 'redux-persist'\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  }), \r\n  logger\r\n]\r\n\r\nconst persistConfigAuth = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist:['token']\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n      auth: persistReducer(persistConfigAuth, authReducer),\r\n      phonebook:phonebookReducer\r\n    },\r\n    middleware,\r\n    devTools:process.env.NODE_ENV === 'development'\r\n})\r\n\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default {store, persistor};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport './base.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </PersistGate>\n    </Provider>, \ndocument.querySelector('#root'));\n","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest')\r\nconst registerSuccess = createAction('auth/registerSuccess')\r\nconst registerError = createAction('auth/registerError')\r\n\r\nconst loginRequest = createAction('auth/loginRequest')\r\nconst loginSuccess = createAction('auth/loginSuccess')\r\nconst loginError = createAction('auth/loginError')\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest')\r\nconst logoutSuccess = createAction('auth/logoutSuccess')\r\nconst logoutError = createAction('auth/logoutError')\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest')\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess')\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError')\r\n\r\nexport default{\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError\r\n}","import { combineReducers } from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit';\r\n\r\nimport authActions from './auth-actions';\r\n\r\nconst initialState = {name: null, email: null};\r\n\r\nconst user = createReducer(initialState, {\r\n    [authActions.registerSuccess]:(_, {payload}) => payload.user,\r\n    [authActions.loginSuccess]:(_, {payload}) => payload.user,\r\n    [authActions.logoutSuccess]:() => initialState,\r\n    [authActions.getCurrentUserSuccess]:(_, {payload}) => payload,\r\n\r\n\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]:(_, {payload}) => payload.token,\r\n    [authActions.loginSuccess]:(_, {payload}) => payload.token,\r\n    [authActions.logoutSuccess]:() => null\r\n});\r\n\r\nconst setError = (_, {payload}) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError\r\n\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    // [authActions.registerSuccess]:() => true,\r\n    // [authActions.loginSuccess]:() => true,\r\n    // [authActions.getCurrentUserSuccess]:() => true,\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated, \r\n    token,\r\n    error\r\n})","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token){\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset(){\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n}\r\n\r\nconst register = credential => async dispatch => {\r\n\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try{\r\n        const res = await axios.post('/users/signup', credential);\r\n        token.set(res.data.token);\r\n        dispatch(authActions.registerSuccess(res.data));\r\n    }catch (err){\r\n        dispatch(authActions.registerError(err.message));\r\n\r\n    }\r\n}\r\n\r\nconst login = credential => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try{\r\n        const res = await axios.post('/users/login', credential);\r\n        token.set(res.data.token);\r\n        dispatch(authActions.loginSuccess(res.data));\r\n    }catch (err){\r\n        dispatch(authActions.loginError(err.message));\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    try{\r\n        await axios.post('/users/logout')\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    }catch (err){\r\n        dispatch(authActions.logoutError(err.message));\r\n\r\n    }\r\n}\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n\r\n    console.log(getState())\r\n\r\n    const {auth:{token:getToken}} = getState();\r\n\r\n    if(!getToken){\r\n        return;\r\n    }\r\n\r\n    token.set(getToken);\r\n\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try{\r\n        const res = await axios.get('/users/current')\r\n        dispatch(authActions.getCurrentUserSuccess(res.data));\r\n    }catch (err){\r\n        dispatch(authActions.getCurrentUserError(err.message));\r\n\r\n    }\r\n}\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser\r\n}\r\n","import { connect } from \"react-redux\"\r\n\r\nconst getIsAuthenticated = state =>  Boolean(state.auth.token);\r\nconst getAuthUserName = state => state.auth.user.name\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getAuthUserName\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('phonebook/fetchContactRequest')\r\nexport const fetchContactSuccess = createAction('phonebook/fetchContactSuccess')\r\nexport const fetchContactError = createAction('phonebook/fetchContactError')\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest')\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess')\r\nexport const addContactError = createAction('phonebook/addContactError')\r\nexport const findContactName = createAction('phonebook/findContactName')\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccess')\r\nexport const deleteContactError = createAction('phonebook/deleteContactError')\r\n\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter')\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"UserMenu_flex__3rPxM\",\"avatar\":\"UserMenu_avatar__3LwnV\"};","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n    [fetchContactSuccess]: (_, {payload}) => payload,\r\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContactSuccess]: (state, {payload}) => state.filter( ({id}) => id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading\r\n})"],"sourceRoot":""}