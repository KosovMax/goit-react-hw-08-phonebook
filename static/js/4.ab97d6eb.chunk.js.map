{"version":3,"sources":["redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["getFilter","state","phonebook","filter","getContacts","contacts","getLoading","loading","getFilterContacts","createSelector","name","toLowerCase","includes","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","credential","addContactRequest","post","addContactSuccess","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getState","contact","INITIAL_STATE","number","ContactForm","onFindName","onAddContact","useState","setState","handleChange","target","value","prevState","reset","className","onSubmit","evt","preventDefault","console","log","length","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","htmlFor","type","onChange","Button","variant","style","margin","display","defaultProps","connect","phonebookOperations","ContactList","fetchContacts","removeContactId","useEffect","Table","striped","bordered","hover","size","width","map","onClick","phonebookSelectors","Filter","onFilter","e","changeFilter","ContactsView","Container","Row","Col","sm"],"mappings":"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","file":"static/js/4.ab97d6eb.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.phonebook.filter;\r\nconst getContacts = state => state.phonebook.contacts;\r\nconst getLoading = state => state.phonebook.loading;\r\n\r\n// const getFilterContacts = state => {\r\n//     const filter = getFilter(state);\r\n//     const contacts = getContacts(state);\r\n\r\n//     console.log(state);\r\n\r\n//     // return contacts.filter(contact => contact.name.toLowerCase().startsWith(filter.toLowerCase()))\r\n//     return contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\r\n// }\r\n\r\nconst getFilterContacts = createSelector(\r\n    [getFilter, getContacts], \r\n    (filter, contacts) =>{\r\n        return contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\r\n    })\r\n\r\nexport default{\r\n    getFilter,\r\n    getContacts,\r\n    getLoading,\r\n    getFilterContacts\r\n}","import axios from 'axios';\r\nimport {     \r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    findContactName,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError } from './phonebook-actions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3030';\r\n\r\nconst fetchContact = () => async dispatch => {\r\n\r\n    dispatch(fetchContactRequest())\r\n\r\n    try{\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactSuccess(data))\r\n    }catch(err){\r\n        dispatch(fetchContactError(err))\r\n    }\r\n\r\n}\r\n\r\nconst addContact = credential => async dispatch => {\r\n\r\n    dispatch(addContactRequest())\r\n    try{\r\n        const { data } = await axios.post('/contacts', credential);\r\n        dispatch(addContactSuccess(data))\r\n    }catch(err){\r\n        dispatch(addContactError(err))\r\n    }\r\n\r\n}\r\n\r\nconst deleteContact = id => async dispatch => {\r\n    dispatch(deleteContactRequest())\r\n\r\n    try{\r\n        await axios.delete(`/contacts/${id}`);\r\n        dispatch(deleteContactSuccess(id))\r\n    }catch(err){\r\n        dispatch(deleteContactError(err))\r\n    }\r\n\r\n}\r\n\r\nconst onFindName = name => (dispatch, getState) =>{\r\n    const { phonebook: {contacts}} = getState();\r\n\r\n    return contacts.filter(contact => contact.name === name)\r\n}\r\n\r\n\r\n\r\nexport default{\r\n    fetchContact,\r\n    addContact,\r\n    deleteContact,\r\n    onFindName\r\n}","import React, { useState } from 'react';\r\nimport './ContactForm.css';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// import phonebookOperations from './../../redux/phonebook/phonebook-operations';\r\n// import phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\nimport {phonebookOperations, phonebookSelectors} from './../../redux/phonebook'\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    name:\"\",\r\n    number:\"\"\r\n}\r\n\r\nconst ContactForm = ({ onFindName, onAddContact }) => {\r\n\r\n    const [state, setState] = useState({...INITIAL_STATE})\r\n    const {name, number} = state;\r\n\r\n\r\n    const handleChange = ({target}) => {\r\n        const { name, value } = target;\r\n        \r\n        setState(prevState => ({...prevState, [name]:value}))\r\n    }\r\n\r\n    const handleSubmit = evt =>{\r\n        evt.preventDefault();\r\n\r\n\r\n        if(!name || !number){\r\n            toast.error(\"Name or phone filed is empty.\", {\r\n                position: \"top-left\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            return false; \r\n        }\r\n\r\n        console.log(onFindName(name));\r\n\r\n        if(onFindName(name).length !== 0){\r\n            toast.warn(name + ' is already in contacts.', {\r\n                position: \"top-left\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n            return false;\r\n        }\r\n\r\n        onAddContact(state);\r\n\r\n        reset();\r\n    }\r\n\r\n\r\n    const reset = () => {\r\n        setState({ ...INITIAL_STATE });\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <form className=\"phonebook\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"name_1\">Name</label><br/>\r\n            <input type=\"text\" name=\"name\" id=\"name_1\" value={name} onChange={handleChange}/>\r\n            <br/>\r\n            <label htmlFor=\"phone_1\">Number</label><br/>\r\n            <input type=\"tel\" name=\"number\" id=\"phone_1\" value={number} onChange={handleChange}/>\r\n            <br/>\r\n            <br/>\r\n            {/* <button type=\"submit\">Add contact</button>\r\n             */}\r\n             <Button variant=\"primary\" type=\"submit\" style={{margin:'auto', display: 'block'}}>Add contact</Button>\r\n        </form>\r\n        <ToastContainer />\r\n        </>\r\n\r\n    );\r\n    \r\n}\r\n\r\nContactForm.defaultProps = {\r\n    onAddContact:() => {},\r\n    onFindName:() => {}\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onAddContact:PropTypes.func,\r\n    onFindName:PropTypes.func\r\n}\r\n \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddContact: credential => dispatch(phonebookOperations.addContact(credential)),\r\n    onFindName: (name) => dispatch(phonebookOperations.onFindName(name))\r\n})\r\nexport default connect(null, mapDispatchToProps)(ContactForm)","import React, { useEffect } from 'react';\r\nimport  PropTypes from 'prop-types';\r\nimport {Table, Button} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n// import phonebookOperations from './../../redux/phonebook/phonebook-operations';\r\n// import phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\nimport {phonebookOperations, phonebookSelectors} from './../../redux/phonebook';\r\n\r\nconst ContactList = ({loading, contacts, fetchContacts, removeContactId }) => {\r\n\r\n    // \r\n    useEffect(()=>{\r\n        console.log(fetchContacts())\r\n    }, [fetchContacts])\r\n\r\n    return(\r\n        <>  \r\n            {loading && <h3>Loading</h3>}\r\n\r\n\r\n            {contacts.length != 0 && \r\n            <>\r\n                <br/>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Name</th>\r\n                        <th>Humber</th>\r\n                        <th width=\"10%\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            contacts.map(({id, name, number}) => (\r\n                                // <li key={id}><span> {name}: {number} </span><button onClick={()=>{removeContactId(id)}}>Delete</button> </li>\r\n                                \r\n                                <tr key={id}>\r\n                                    <td>{name}</td>\r\n                                    <td>{number}</td>\r\n                                    <td><Button variant=\"danger\" onClick={()=>{removeContactId(id)}}>Delete</Button> </td>\r\n                                </tr>\r\n                                \r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nContactList.defaultProps = {\r\n    contacts:[],\r\n    removeContactId:() =>{}\r\n}\r\nContactList.propTypes = {\r\n    contacts:PropTypes.array.isRequired,\r\n    removeContactId:PropTypes.func\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    loading:phonebookSelectors.getLoading(state),\r\n    contacts:phonebookSelectors.getFilterContacts(state)\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    fetchContacts: () => dispatch(phonebookOperations.fetchContact()),\r\n    removeContactId: id => dispatch(phonebookOperations.deleteContact(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n// import * as phonebookActions from './../../redux/phonebook/phonebook-actions';\r\n// import phonebookSelectors from './../../redux/phonebook/phonebook-selectors';\r\n\r\nimport {phonebookSelectors, changeFilter} from './../../redux/phonebook';\r\n\r\n\r\nconst Filter = ({filter, onFilter}) => {\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"filter_1\">Find contacts by name</label><br/>\r\n            <input type=\"text\" name=\"filter\" id=\"filter_1\" value={filter}  onChange={onFilter} />\r\n        </form>\r\n    );\r\n}\r\n\r\nFilter.defaultProps = {\r\n    filter:'',\r\n    onFilter:()=>{}\r\n}\r\nFilter.propTypes = {\r\n    filter:PropTypes.string.isRequired,\r\n    onFilter:PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    filter:phonebookSelectors.getFilter(state)\r\n});\r\n\r\nconst  mapDispatchToprops = dispatch =>({\r\n    onFilter: e => dispatch(changeFilter(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(Filter)","import { Container, Row, Col } from 'react-bootstrap';\r\nimport ContactForm from './../../components/ContactForm';\r\nimport ContactList from './../../components/ContactList'\r\nimport Filter from './../../components/Filter'\r\n\r\nexport default function ContactsView(){\r\n    return(\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={3}>\r\n                        <h2>Phonebook</h2>\r\n                        <ContactForm />\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                        <h2>Contacts</h2>\r\n                        <Filter/>\r\n                        <ContactList /> \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}